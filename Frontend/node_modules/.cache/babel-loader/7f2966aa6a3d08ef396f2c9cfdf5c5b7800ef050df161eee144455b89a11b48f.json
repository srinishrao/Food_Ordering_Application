{"ast":null,"code":"{/* import React from 'react'\n import { Form, Button } from 'react-bootstrap';\n import \"../styles/profile.css\"\n const OwnerProfile = () => {\n  const firstName = 'Srinish'\n  return (\n    <div>\n      <h1 className='heading'>Your Profile</h1>\n      <div className='formProfile'>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control type=\"text\" placeholder={firstName} />\n          </Form.Group>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Last Name</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Restaurant Name</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Restaurant Image</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Cuisine</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n           <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Profile Image</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n        \n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n }\n export default OwnerProfile  \n    \n      <form onSubmit={handleSubmit}>\n           <label htmlFor=\"firstname\">\n              Firstname:\n              <FontAwesomeIcon icon={faCheck} className={validFirstName ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validFirstName || !firstName ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"firstname\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setFirstName(e.target.value)}\n              value={firstName}\n              required\n              aria-invalid={validFirstName ? \"false\" : \"true\"}\n              aria-describedby=\"uidnote\"\n              onFocus={() => setFirstNameFocus(true)}\n              onBlur={() => setFirstNameFocus(false)}\n          />\n          <p id=\"uidnote\" className={firstNameFocus && firstName && !validFirstName ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters.<br />\n              Must begin with a letter.<br />\n              Letters, numbers, underscores, hyphens allowed.\n          </p>\n           <label htmlFor=\"lastname\">\n              Lastname:\n              <FontAwesomeIcon icon={faCheck} className={validLastName ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validLastName || !lastName ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"lastname\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setLastName(e.target.value)}\n              value={lastName}\n              required\n              aria-invalid={validLastName ? \"false\" : \"true\"}\n              aria-describedby=\"uidnote\"\n              onFocus={() => setLastNameFocus(true)}\n              onBlur={() => setLastNameFocus(false)}\n          />\n          <p id=\"uidnote\" className={lastNameFocus && lastName && !validLastName ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters.<br />\n              Must begin with a letter.<br />\n              Letters, numbers, underscores, hyphens allowed.\n          </p>\n           <label htmlFor=\"email\">\n              Email:\n              <FontAwesomeIcon icon={faCheck} className={validEmail ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validEmail || !email ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"email\"\n              id=\"email\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              required\n              aria-invalid={validEmail ? \"false\" : \"true\"}\n              aria-describedby=\"emailnote\"\n              onFocus={() => setEmailFocus(true)}\n              onBlur={() => setEmailFocus(false)}\n          />\n          <p id=\"emailnote\" className={emailFocus && !validEmail ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Email is in Incorrect format!!!\n          </p>\n          \n           <label htmlFor=\"password\">\n              Password:\n              <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPwd(e.target.value)}\n              value={pwd}\n              required\n              aria-invalid={validPwd ? \"false\" : \"true\"}\n              aria-describedby=\"pwdnote\"\n              onFocus={() => setPwdFocus(true)}\n              onBlur={() => setPwdFocus(false)}\n          />\n          <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              8 to 24 characters.<br />\n              Must include uppercase and lowercase letters, a number and a special character.<br />\n              Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\n          </p>\n           <label htmlFor=\"restaurantName\">\n              RestaurantName:\n              <FontAwesomeIcon icon={faCheck} className={validRestaurantName ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validRestaurantName || !restaurantName ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"restaurantName\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setRestaurantName(e.target.value)}\n              value={restaurantName}\n              required\n              aria-invalid={validRestaurantName ? \"false\" : \"true\"}\n              aria-describedby=\"resnote\"\n              onFocus={() => setRestaurantNameFocus(true)}\n              onBlur={() => setRestaurantNameFocus(false)}\n          />\n          <p id=\"resnote\" className={restaurantNameFocus && restaurantName && !validRestaurantName ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters.<br />\n              Must begin with a letter.<br />\n              Letters, numbers, underscores, hyphens allowed.\n          </p>\n           <label htmlFor=\"zipCode\">\n              ZipCode:\n              <FontAwesomeIcon icon={faCheck} className={validZipCode ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validZipCode || !zipCode ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"zipCode\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setZipCode(e.target.value)}\n              value={zipCode}\n              required\n              aria-invalid={validZipCode ? \"false\" : \"true\"}\n              aria-describedby=\"zipnote\"\n              onFocus={() => setZipCodeFocus(true)}\n              onBlur={() => setZipCodeFocus(false)}\n          />\n          <p id=\"zipnote\" className={zipCodeFocus && zipCode && !validZipCode ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Must be of 5 digit number.\n          </p>\n           <button className=\"signupButton\" disabled={!validFirstName || !validLastName || !validEmail || !validPwd ? true : false}>Sign Up</button>\n      </form>\n  */}","map":{"version":3,"names":[],"sources":["/Users/srinishkuchadi/Desktop/food-app/src/Profile/OwnerProfile.js"],"sourcesContent":["{/* import React from 'react'\nimport { Form, Button } from 'react-bootstrap';\nimport \"../styles/profile.css\"\n\nconst OwnerProfile = () => {\n  const firstName = 'Srinish'\n  return (\n    <div>\n      <h1 className='heading'>Your Profile</h1>\n      <div className='formProfile'>\n        <Form>\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>First Name</Form.Label>\n          <Form.Control type=\"text\" placeholder={firstName} />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Last Name</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Email</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Phone Number</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Restaurant Name</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Restaurant Image</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n            <Form.Label>Cuisine</Form.Label>\n            <Form.Control type=\"email\" placeholder=\"Enter email\" />\n          </Form.Group>\n\n          <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n            <Form.Label>Profile Image</Form.Label>\n            <Form.Control type=\"password\" placeholder=\"Password\" />\n          </Form.Group>\n        \n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default OwnerProfile  \n    \n      <form onSubmit={handleSubmit}>\n\n          <label htmlFor=\"firstname\">\n              Firstname:\n              <FontAwesomeIcon icon={faCheck} className={validFirstName ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validFirstName || !firstName ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"firstname\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setFirstName(e.target.value)}\n              value={firstName}\n              required\n              aria-invalid={validFirstName ? \"false\" : \"true\"}\n              aria-describedby=\"uidnote\"\n              onFocus={() => setFirstNameFocus(true)}\n              onBlur={() => setFirstNameFocus(false)}\n          />\n          <p id=\"uidnote\" className={firstNameFocus && firstName && !validFirstName ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters.<br />\n              Must begin with a letter.<br />\n              Letters, numbers, underscores, hyphens allowed.\n          </p>\n\n          <label htmlFor=\"lastname\">\n              Lastname:\n              <FontAwesomeIcon icon={faCheck} className={validLastName ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validLastName || !lastName ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"lastname\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setLastName(e.target.value)}\n              value={lastName}\n              required\n              aria-invalid={validLastName ? \"false\" : \"true\"}\n              aria-describedby=\"uidnote\"\n              onFocus={() => setLastNameFocus(true)}\n              onBlur={() => setLastNameFocus(false)}\n          />\n          <p id=\"uidnote\" className={lastNameFocus && lastName && !validLastName ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters.<br />\n              Must begin with a letter.<br />\n              Letters, numbers, underscores, hyphens allowed.\n          </p>\n\n          <label htmlFor=\"email\">\n              Email:\n              <FontAwesomeIcon icon={faCheck} className={validEmail ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validEmail || !email ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"email\"\n              id=\"email\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setEmail(e.target.value)}\n              value={email}\n              required\n              aria-invalid={validEmail ? \"false\" : \"true\"}\n              aria-describedby=\"emailnote\"\n              onFocus={() => setEmailFocus(true)}\n              onBlur={() => setEmailFocus(false)}\n          />\n          <p id=\"emailnote\" className={emailFocus && !validEmail ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Email is in Incorrect format!!!\n          </p>\n          \n\n          <label htmlFor=\"password\">\n              Password:\n              <FontAwesomeIcon icon={faCheck} className={validPwd ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validPwd || !pwd ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"password\"\n              id=\"password\"\n              onChange={(e) => setPwd(e.target.value)}\n              value={pwd}\n              required\n              aria-invalid={validPwd ? \"false\" : \"true\"}\n              aria-describedby=\"pwdnote\"\n              onFocus={() => setPwdFocus(true)}\n              onBlur={() => setPwdFocus(false)}\n          />\n          <p id=\"pwdnote\" className={pwdFocus && !validPwd ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              8 to 24 characters.<br />\n              Must include uppercase and lowercase letters, a number and a special character.<br />\n              Allowed special characters: <span aria-label=\"exclamation mark\">!</span> <span aria-label=\"at symbol\">@</span> <span aria-label=\"hashtag\">#</span> <span aria-label=\"dollar sign\">$</span> <span aria-label=\"percent\">%</span>\n          </p>\n\n          <label htmlFor=\"restaurantName\">\n              RestaurantName:\n              <FontAwesomeIcon icon={faCheck} className={validRestaurantName ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validRestaurantName || !restaurantName ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"restaurantName\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setRestaurantName(e.target.value)}\n              value={restaurantName}\n              required\n              aria-invalid={validRestaurantName ? \"false\" : \"true\"}\n              aria-describedby=\"resnote\"\n              onFocus={() => setRestaurantNameFocus(true)}\n              onBlur={() => setRestaurantNameFocus(false)}\n          />\n          <p id=\"resnote\" className={restaurantNameFocus && restaurantName && !validRestaurantName ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              4 to 24 characters.<br />\n              Must begin with a letter.<br />\n              Letters, numbers, underscores, hyphens allowed.\n          </p>\n\n          <label htmlFor=\"zipCode\">\n              ZipCode:\n              <FontAwesomeIcon icon={faCheck} className={validZipCode ? \"valid\" : \"hide\"} />\n              <FontAwesomeIcon icon={faTimes} className={validZipCode || !zipCode ? \"hide\" : \"invalid\"} />\n          </label>\n          <input\n              type=\"text\"\n              id=\"zipCode\"\n              ref={userRef}\n              autoComplete=\"off\"\n              onChange={(e) => setZipCode(e.target.value)}\n              value={zipCode}\n              required\n              aria-invalid={validZipCode ? \"false\" : \"true\"}\n              aria-describedby=\"zipnote\"\n              onFocus={() => setZipCodeFocus(true)}\n              onBlur={() => setZipCodeFocus(false)}\n          />\n          <p id=\"zipnote\" className={zipCodeFocus && zipCode && !validZipCode ? \"instructions\" : \"offscreen\"}>\n              <FontAwesomeIcon icon={faInfoCircle} />\n              Must be of 5 digit number.\n          </p>\n\n          <button className=\"signupButton\" disabled={!validFirstName || !validLastName || !validEmail || !validPwd ? true : false}>Sign Up</button>\n      </form>\n  */}\n\n\n"],"mappingsnMC"},"metadata":{},"sourceType":"module","externalDependencies":[]}